name: Deploy to production

on:
  push:
    branches: ['main']

jobs:
  fingerprint:
    name: Fingerprint
    steps:
    - uses: eas/checkout
    - uses: eas/install_node_modules
    - name: Install additional tools
      run: sudo apt-get update -y && sudo apt-get 
       install -y jq

    - name: Set fingerprint variables
      id: fingerprint_step_id
      run: |
        # Generate a simple fingerprint based on package.json and app.json
        ANDROID_FINGERPRINT_HASH=$(cat package.json app.json | jq -s '.[0].dependencies + .[1]' | jq -r 'tostring' | md5sum | cut -d' ' -f1)
        IOS_FINGERPRINT_HASH=$(cat package.json app.json | jq -s '.[0].dependencies + .[1]' | jq -r 'tostring' | md5sum | cut -d' ' -f1)
        echo "android_fingerprint_hash=$ANDROID_FINGERPRINT_HASH" >> $GITHUB_OUTPUT
        echo "ios_fingerprint_hash=$IOS_FINGERPRINT_HASH" >> $GITHUB_OUTPUT
  get_android_build:
    name: Check for existing android build
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.android_fingerprint_hash }}
      profile: production
  # get_ios_build:
  #   name: Check for existing ios build
  #   needs: [fingerprint]
  #   type: get-build
  #   params:
  #     fingerprint_hash: ${{ needs.fingerprint.outputs.ios_fingerprint_hash }}
  #     profile: production
  build_android:
    name: Build Android
    needs: [get_android_build]
    if: ${{ !needs.get_android_build.outputs.build_id }}
    type: build
    params:
      platform: android
      profile: production
  # build_ios:
  #   name: Build iOS
  #   needs: [get_ios_build]
  #   if: ${{ !needs.get_ios_build.outputs.build_id }}
  #   type: build
  #   params:
  #     platform: ios
  #     profile: production
  submit_android_build:
    name: Submit Android Build
    needs: [build_android]
    type: submit
    params:
      build_id: ${{ needs.build_android.outputs.build_id }}
  # submit_ios_build:
  #   name: Submit iOS Build
  #   needs: [build_ios]
  #   type: submit
  #   params:
  #     build_id: ${{ needs.build_ios.outputs.build_id }}
  publish_android_update:
    name: Publish Android update
    needs: [get_android_build]
    if: ${{ needs.get_android_build.outputs.build_id }}
    type: update
    params:
      branch: production
      platform: android
  # publish_ios_update:
  #   name: Publish iOS update
  #   needs: [get_ios_build]
  #   if: ${{ needs.get_ios_build.outputs.build_id }}
  #   type: update
  #   params:
  #     branch: production
  #     platform: ios
